services:
  backend:
    build:
      context: .
      dockerfile: backend.Dockerfile
    environment:
      - API_BASE_URL=http://middleware:8000
      - API_API_KEY=abc
      - CACHE_URL=redis://redis
      - DATABASE_URL=postgresql+asyncpg://postgres:pgpasswd@postgres/postgres
    networks:
      - public
      - private
    ports:
      - 8000:8000
    develop:
      watch:
        - path: ./src
          target: /src
          action: sync
        - path: ./src/frontend
          target: /src/frontend
          action: sync
        - path: ./src/aquasensor_backend
          target: /src/aquasensor_backend
          action: sync+restart

  middleware:
    build:
      context: .
      dockerfile: middleware.Dockerfile
    networks:
      - private
    environment:
      - MIDDLEWARE_API_KEY=abc
    env_file:
      - envs/middleware.env

  redis:
    image: redis:8.0-M03-alpine
    volumes:
      - red:/data
    networks:
      - private
    ports:
      - 6379:6379

  postgres:
    image: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: pgpasswd
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres
    networks:
      - private
    volumes:
      - pgdata:/var/lib/postgresql/data

  influxdb:
    image: influxdb
    restart: always
    volumes:
      - influxdb_data:/var/lib/influxdb2
    networks:
      - private
    ports:
      - 8086:8086
    environment:
      - INFLUXDB_DB=sensorsdb
      - INFLUXDB_ADMIN_USER=infliuxadmin
      - INFLUXDB_ADMIN_PASSWORD=influxpasswd
      - INFLUXDB_ORG=aquasensor
      - INFLUXDB_BUCKET=sensors
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8086/health"]  
      interval: 10s
      retries: 5
      start_period: 10s
    env_file:
      - envs/influx.env

volumes:
  red:
    external: false
  pgdata:
    external: false
  influxdb_data:
    external: false

networks:
  public:
    external: false
  private:
    external: false